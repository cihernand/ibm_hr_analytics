# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SKg4Ha26V1HDP2zghknAkr2Yj3dAkYCC
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import matplotlib.pyplot as plt
import seaborn as sns



@st.cache_data
def load_data():
    # Replace 'hr_attrition_data.csv' with the actual path to your data file
    try:
        df = pd.read_csv('hr_attrition_data.csv')
        # Assuming 'Attrition' is a categorical column ('Yes'/'No')
        df['Attrition_Flag'] = df['Attrition'].map({'Yes': 1, 'No': 0})
        # Assuming you have a 'TerminationDate' column
        return df
    except FileNotFoundError:
        st.error("Error: hr_attrition_data.csv not found. Please upload your data file.")
        return None

df = load_data()

if df is None:
    st.stop()

# --- 2. Calculate Key Metrics ---
total_employees = len(df)
total_attrition = df['Attrition_Flag'].sum()
attrition_rate = (total_attrition / total_employees) * 100 if total_employees > 0 else 0

# --- 3. Create Visualizations ---

# Overview Section
st.header("HR Attrition Dashboard")
st.subheader("Overview")

col1, col2, col3 = st.columns(3)
col1.metric("Attrition Rate", f"{attrition_rate:.1f}%")
col2.metric("Total Attrition", total_attrition)
col3.metric("Current Employees", total_employees - total_attrition)

st.markdown("---")

# Demographics Section
st.subheader("Demographics")
col_gender, col_age, col_education = st.columns(3)

if 'Gender' in df.columns:
    gender_attrition = df.groupby('Gender')['Attrition_Flag'].mean().reset_index()
    fig_gender = px.pie(gender_attrition, names='Gender', values='Attrition_Flag',
                        title='Attrition by Gender',
                        color_discrete_sequence=px.colors.qualitative.Set2)
    col_gender.plotly_chart(fig_gender, use_container_width=True)
else:
    col_gender.warning("Column 'Gender' not found in the data.")

if 'AgeGroup' in df.columns:
    age_attrition = df.groupby('AgeGroup')['Attrition_Flag'].mean().sort_values(ascending=False).reset_index()
    fig_age = px.bar(age_attrition, x='AgeGroup', y='Attrition_Flag',
                     title='Attrition Rate by Age Group',
                     labels={'Attrition_Flag': 'Attrition Rate'},
                     color_discrete_sequence=px.colors.qualitative.Prism)
    col_age.plotly_chart(fig_age, use_container_width=True)
else:
    col_age.warning("Column 'AgeGroup' not found in the data.")

if 'Education' in df.columns:
    education_attrition = df.groupby('Education')['Attrition_Flag'].mean().sort_values(ascending=False).reset_index()
    fig_education = px.bar(education_attrition, x='Education', y='Attrition_Flag',
                           title='Attrition Rate by Education Level',
                           labels={'Attrition_Flag': 'Attrition Rate'},
                           color_discrete_sequence=px.colors.qualitative.Dark2)
    col_education.plotly_chart(fig_education, use_container_width=True)
else:
    col_education.warning("Column 'Education' not found in the data.")

st.markdown("---")

# Job Role Section
st.subheader("Attrition by Job Role")
if 'JobRole' in df.columns:
    job_role_attrition = df.groupby('JobRole')['Attrition_Flag'].mean().sort_values(ascending=False).head(5).reset_index()
    fig_job_role = px.bar(job_role_attrition, x='JobRole', y='Attrition_Flag',
                          title='Top 5 Job Roles by Attrition Rate',
                          labels={'Attrition_Flag': 'Attrition Rate'},
                          color_discrete_sequence=px.colors.qualitative.Pastel1)
    st.plotly_chart(fig_job_role, use_container_width=True)
else:
    st.warning("Column 'JobRole' not found in the data.")

st.markdown("---")

# --- (You can add more sections for Survey Scores, Recent Attrition details, etc.) ---
